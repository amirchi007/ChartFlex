package com.amir.steelsenseandroidtask.uiimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport org.koin.androidx.compose.getViewModel@Composablefun LineChartScreen(viewModel: LineChartViewModel = getViewModel()) {    val visibleData by viewModel.visibleDatasets    val showLine1 by viewModel.showLine1    val showLine2 by viewModel.showLine2    val showLine3 by viewModel.showLine3    Column(        modifier = Modifier            .fillMaxSize()            .padding(horizontal = 30.dp)            .padding(vertical = 100.dp)    ) {        Spacer(modifier = Modifier.height(30.dp))        Legend(            colors = listOf(Color.Red, Color.Green, Color.Blue),            labels = listOf("Dataset A", "Dataset B", "Dataset C")        )        Spacer(modifier = Modifier.height(12.dp))        LineChartCanvas(            datasets = visibleData,            modifier = Modifier                .weight(0.5f)                .fillMaxWidth()        )        Spacer(modifier = Modifier.height(106.dp))        ChartToggleRow(            showLine1 = showLine1,            showLine2 = showLine2,            showLine3 = showLine3,            onToggle = { viewModel.toggleLine(it) }        )        Spacer(modifier = Modifier.height(12.dp))    }}